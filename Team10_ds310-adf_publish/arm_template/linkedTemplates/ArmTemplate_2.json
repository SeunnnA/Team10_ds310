{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "df-team10"
        },
        "SqlServer1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'SqlServer1'"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/VMdates_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "vmdata"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/odsparquet1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "ods-metricandpolicy"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/odsparquet2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "ods-metricandpolicy"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/policy_ods')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "ods-metricandpolicy"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/vm_metrics')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "fileSystem": "vmdata"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServer1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('SqlServer1_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "integrationRuntime1",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSQL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Geography",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SQLCountry",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ODSGeoParquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Dates",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SQLDates",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ODSDatesParquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Policy",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "ParquetReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Cosmos_policydata_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ODSPolicyParquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-10T19:33:45Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cosmos')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "CosmosDbSqlApiSource",
                                "preferredRegions": []
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "$['CountryName']"
                                        },
                                        "sink": {
                                            "name": "CountryName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['CountryCode']"
                                        },
                                        "sink": {
                                            "name": "CountryCode"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['RegionName']"
                                        },
                                        "sink": {
                                            "name": "RegionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['RegionCode']"
                                        },
                                        "sink": {
                                            "name": "RegionCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Jurisdiction']"
                                        },
                                        "sink": {
                                            "name": "Jurisdiction"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Date']"
                                        },
                                        "sink": {
                                            "name": "Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C1_School closing']"
                                        },
                                        "sink": {
                                            "name": "C1_School_closing"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C1_Flag']"
                                        },
                                        "sink": {
                                            "name": "C1_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C2_Workplace closing']"
                                        },
                                        "sink": {
                                            "name": "C2_Workplace_closing"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C2_Flag']"
                                        },
                                        "sink": {
                                            "name": "C2_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C3_Cancel public events']"
                                        },
                                        "sink": {
                                            "name": "C3_Cancel_public_events",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C3_Flag']"
                                        },
                                        "sink": {
                                            "name": "C3_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C4_Restrictions on gatherings']"
                                        },
                                        "sink": {
                                            "name": "C4_Restrictions_on_gatherings",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C4_Flag']"
                                        },
                                        "sink": {
                                            "name": "C4_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C5_Close public transport']"
                                        },
                                        "sink": {
                                            "name": "C5_Close_public_transport",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C5_Flag']"
                                        },
                                        "sink": {
                                            "name": "C5_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C6_Stay at home requirements']"
                                        },
                                        "sink": {
                                            "name": "C6_Stay_at_home_requirements",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C6_Flag']"
                                        },
                                        "sink": {
                                            "name": "C6_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C7_Restrictions on internal movement']"
                                        },
                                        "sink": {
                                            "name": "C7_Restrictions_on_internal_movement",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C7_Flag']"
                                        },
                                        "sink": {
                                            "name": "C7_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C8_International travel controls']"
                                        },
                                        "sink": {
                                            "name": "C8_International_travel_controls",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E1_Income support']"
                                        },
                                        "sink": {
                                            "name": "E1_Income_support"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E1_Flag']"
                                        },
                                        "sink": {
                                            "name": "E1_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E2_Debt contract relief']"
                                        },
                                        "sink": {
                                            "name": "E2_Debt_contract_relief",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E3_Fiscal measures']"
                                        },
                                        "sink": {
                                            "name": "E3_Fiscal_measures",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E4_International support']"
                                        },
                                        "sink": {
                                            "name": "E4_International_support",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H1_Public information campaigns']"
                                        },
                                        "sink": {
                                            "name": "H1_Public_information_campaigns",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H1_Flag']"
                                        },
                                        "sink": {
                                            "name": "H1_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H2_Testing policy']"
                                        },
                                        "sink": {
                                            "name": "H2_Testing_policy",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H3_Contact tracing']"
                                        },
                                        "sink": {
                                            "name": "H3_Contact_tracing",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H4_Emergency investment in healthcare']"
                                        },
                                        "sink": {
                                            "name": "H4_Emergency_investment_in_healthcare",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H5_Investment in vaccines']"
                                        },
                                        "sink": {
                                            "name": "H5_Investment_in_vaccines",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H6_Facial Coverings']"
                                        },
                                        "sink": {
                                            "name": "H6_Facial_Coverings",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H6_Flag']"
                                        },
                                        "sink": {
                                            "name": "H6_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H7_Vaccination policy']"
                                        },
                                        "sink": {
                                            "name": "H7_Vaccination_policy",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H7_Flag']"
                                        },
                                        "sink": {
                                            "name": "H7_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H8_Protection of elderly people']"
                                        },
                                        "sink": {
                                            "name": "H8_Protection_of_elderly_people",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H8_Flag']"
                                        },
                                        "sink": {
                                            "name": "H8_Flag",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['M1_Wildcard']"
                                        },
                                        "sink": {
                                            "name": "M1_Wildcard",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyIndex']"
                                        },
                                        "sink": {
                                            "name": "StringencyIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "StringencyIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyLegacyIndex']"
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyLegacyIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['GovernmentResponseIndex']"
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['GovernmentResponseIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ContainmentHealthIndex']"
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ContainmentHealthIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['EconomicSupportIndex']"
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['EconomicSupportIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['id']"
                                        },
                                        "sink": {
                                            "name": "id"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_rid']"
                                        },
                                        "sink": {
                                            "name": "_rid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_self']"
                                        },
                                        "sink": {
                                            "name": "_self"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_etag']"
                                        },
                                        "sink": {
                                            "name": "_etag"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_attachments']"
                                        },
                                        "sink": {
                                            "name": "_attachments"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_ts']"
                                        },
                                        "sink": {
                                            "name": "_ts"
                                        }
                                    }
                                ],
                                "collectionReference": "",
                                "mapComplexValuesToString": false
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CosmosDbNoSqlContainer1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Cosmos_policydata_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-08T20:50:49Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Dates_Ods')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Dates",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Dates",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet7",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Geography_Ods')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Geography",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Country",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Ods_dates')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Dates",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SQLDates",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ODSDatesParquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-08T20:39:42Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Ods_geography')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Geography",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SQLCountry",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ODSGeoParquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-08T20:39:42Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Ods_policy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Policy",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "ParquetReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Cosmos_policydata_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ODSPolicyParquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-10T19:33:45Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Policy_Ods')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Policy",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "ParquetReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Parquet8",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "policy_ods",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/policy_ods')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Updated",
                        "type": "date"
                    },
                    {
                        "name": "Confirmed",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "varchar"
                    },
                    {
                        "name": "ISO3",
                        "type": "varchar"
                    },
                    {
                        "name": "Country_Region",
                        "type": "varchar"
                    },
                    {
                        "name": "load_time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "DateKey",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FullDate",
                        "type": "date"
                    },
                    {
                        "name": "isWeekDay",
                        "type": "bit"
                    },
                    {
                        "name": "DayOfWeek",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfMonth",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayName",
                        "type": "varchar"
                    },
                    {
                        "name": "WeekOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "WeekName",
                        "type": "varchar"
                    },
                    {
                        "name": "MonthOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MonthName",
                        "type": "varchar"
                    },
                    {
                        "name": "CalendarQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CalendarQuarterName",
                        "type": "varchar"
                    },
                    {
                        "name": "CalendarYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalMonth",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalMonthName",
                        "type": "varchar"
                    },
                    {
                        "name": "FiscalQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalQuarterName",
                        "type": "varchar"
                    },
                    {
                        "name": "FiscalYear",
                        "type": "int",
                        "precision": 10
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Dates"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow1')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "vm_metrics",
                                "type": "DatasetReference"
                            },
                            "name": "vmmetrics"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQLcovid_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "azuremetrics"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODSPolicyParquet",
                                "type": "DatasetReference"
                            },
                            "name": "PolicySource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODSGeoParquet",
                                "type": "DatasetReference"
                            },
                            "name": "GeographySource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODSDatesParquet",
                                "type": "DatasetReference"
                            },
                            "name": "DateSource"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODScases_sink",
                                "type": "DatasetReference"
                            },
                            "name": "cases"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODSdeaths_sink",
                                "type": "DatasetReference"
                            },
                            "name": "deaths"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODSRecoveries_sink",
                                "type": "DatasetReference"
                            },
                            "name": "recoveries"
                        },
                        {
                            "dataset": {
                                "referenceName": "Final_policy",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "union"
                        },
                        {
                            "name": "selectcases"
                        },
                        {
                            "name": "selectdeaths"
                        },
                        {
                            "name": "selectrecoveries"
                        },
                        {
                            "name": "select1"
                        },
                        {
                            "name": "derivedColumn1"
                        },
                        {
                            "name": "derivedColumn2"
                        },
                        {
                            "name": "derivedColumn3"
                        },
                        {
                            "name": "derivedColumn4"
                        },
                        {
                            "name": "cast1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> vmmetrics",
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> azuremetrics",
                        "source(output(",
                        "          CountryName as string,",
                        "          CountryCode as string,",
                        "          RegionName as string,",
                        "          RegionCode as string,",
                        "          Jurisdiction as string,",
                        "          Date as timestamp,",
                        "          C1_School_closing as long,",
                        "          C1_Flag as double,",
                        "          C2_Workplace_closing as long,",
                        "          C2_Flag as double,",
                        "          C3_Cancel_public_events as double,",
                        "          C3_Flag as double,",
                        "          C4_Restrictions_on_gatherings as double,",
                        "          C4_Flag as double,",
                        "          C5_Close_public_transport as double,",
                        "          C5_Flag as double,",
                        "          C6_Stay_at_home_requirements as double,",
                        "          C6_Flag as double,",
                        "          C7_Restrictions_on_internal_movement as double,",
                        "          C7_Flag as double,",
                        "          C8_International_travel_controls as double,",
                        "          E1_Income_support as long,",
                        "          E1_Flag as double,",
                        "          E2_Debt_contract_relief as double,",
                        "          E3_Fiscal_measures as double,",
                        "          E4_International_support as double,",
                        "          H1_Public_information_campaigns as double,",
                        "          H1_Flag as double,",
                        "          H2_Testing_policy as double,",
                        "          H3_Contact_tracing as double,",
                        "          H4_Emergency_investment_in_healthcare as double,",
                        "          H5_Investment_in_vaccines as double,",
                        "          H6_Facial_Coverings as double,",
                        "          H6_Flag as double,",
                        "          H7_Vaccination_policy as double,",
                        "          H7_Flag as double,",
                        "          H8_Protection_of_elderly_people as double,",
                        "          H8_Flag as double,",
                        "          M1_Wildcard as double,",
                        "          StringencyIndex as double,",
                        "          StringencyIndexForDisplay as double,",
                        "          StringencyLegacyIndex as double,",
                        "          StringencyLegacyIndexForDisplay as double,",
                        "          GovernmentResponseIndex as double,",
                        "          GovernmentResponseIndexForDisplay as double,",
                        "          ContainmentHealthIndex as double,",
                        "          ContainmentHealthIndexForDisplay as double,",
                        "          EconomicSupportIndex as double,",
                        "          EconomicSupportIndexForDisplay as double,",
                        "          id as string,",
                        "          {_rid} as string,",
                        "          {_self} as string,",
                        "          {_etag} as string,",
                        "          {_attachments} as string,",
                        "          {_ts} as long",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> PolicySource",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> GeographySource",
                        "source(output(",
                        "          DateKey as integer,",
                        "          FullDate as date,",
                        "          isWeekDay as boolean,",
                        "          DayOfWeek as integer,",
                        "          DayOfMonth as integer,",
                        "          DayOfQuarter as integer,",
                        "          DayOfYear as integer,",
                        "          DayName as string,",
                        "          WeekOfYear as integer,",
                        "          WeekName as string,",
                        "          MonthOfYear as integer,",
                        "          MonthName as string,",
                        "          CalendarQuarter as integer,",
                        "          CalendarQuarterName as string,",
                        "          CalendarYear as integer,",
                        "          FiscalMonth as integer,",
                        "          FiscalMonthName as string,",
                        "          FiscalQuarter as integer,",
                        "          FiscalQuarterName as string,",
                        "          FiscalYear as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> DateSource",
                        "vmmetrics, azuremetrics union(byName: true)~> union",
                        "union select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Confirmed,",
                        "          Confirmed_Change,",
                        "          CountryCode = ISO3",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectcases",
                        "union select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Deaths,",
                        "          Deaths_Change,",
                        "          CountryCode = ISO3",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectdeaths",
                        "union select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Recovered,",
                        "          Recovered_Change,",
                        "          CountryCode = ISO3",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectrecoveries",
                        "derivedColumn4 select(mapColumn(",
                        "          CountryName,",
                        "          CountryCode,",
                        "          RegionName,",
                        "          RegionCode,",
                        "          Jurisdiction,",
                        "          Date,",
                        "          C1_School_closing,",
                        "          C1_Flag,",
                        "          C2_Workplace_closing,",
                        "          C2_Flag,",
                        "          C3_Cancel_public_events,",
                        "          C3_Flag,",
                        "          C4_Restrictions_on_gatherings,",
                        "          C4_Flag,",
                        "          C5_Close_public_transport,",
                        "          C5_Flag,",
                        "          C6_Stay_at_home_requirements,",
                        "          C6_Flag,",
                        "          C7_Restrictions_on_internal_movement,",
                        "          C7_Flag,",
                        "          C8_International_travel_controls,",
                        "          E1_Income_support,",
                        "          E1_Flag,",
                        "          E2_Debt_contract_relief,",
                        "          E3_Fiscal_measures,",
                        "          E4_International_support,",
                        "          H1_Public_information_campaigns,",
                        "          H1_Flag,",
                        "          H2_Testing_policy,",
                        "          H3_Contact_tracing,",
                        "          H4_Emergency_investment_in_healthcare,",
                        "          H5_Investment_in_vaccines,",
                        "          H6_Facial_Coverings,",
                        "          H6_Flag,",
                        "          H7_Vaccination_policy,",
                        "          H7_Flag,",
                        "          H8_Protection_of_elderly_people,",
                        "          H8_Flag,",
                        "          M1_Wildcard,",
                        "          StringencyIndex,",
                        "          StringencyIndexForDisplay,",
                        "          StringencyLegacyIndex,",
                        "          StringencyLegacyIndexForDisplay,",
                        "          GovernmentResponseIndex,",
                        "          GovernmentResponseIndexForDisplay,",
                        "          ContainmentHealthIndex,",
                        "          ContainmentHealthIndexForDisplay,",
                        "          EconomicSupportIndex,",
                        "          EconomicSupportIndexForDisplay,",
                        "          id,",
                        "          {_rid},",
                        "          {_self},",
                        "          {_etag},",
                        "          {_attachments},",
                        "          {_ts},",
                        "          UniqueID",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> select1",
                        "selectrecoveries derive(UniqueID = concat(toString(Updated), CountryCode)) ~> derivedColumn1",
                        "selectdeaths derive(UniqueID = concat(toString(Updated), CountryCode)) ~> derivedColumn2",
                        "selectcases derive(UniqueID = concat(toString(Updated), CountryCode)) ~> derivedColumn3",
                        "cast1 derive(UniqueID = concat(toString(Date), CountryCode)) ~> derivedColumn4",
                        "PolicySource cast(output(",
                        "          Date as date",
                        "     ),",
                        "     errors: true) ~> cast1",
                        "derivedColumn3 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     format: 'parquet',",
                        "     partitionFileNames:['cases.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 1,",
                        "     partitionBy('hash', 1)) ~> cases",
                        "derivedColumn2 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     format: 'parquet',",
                        "     partitionFileNames:['deaths.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> deaths",
                        "derivedColumn1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     format: 'parquet',",
                        "     partitionFileNames:['recoveries.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> recoveries",
                        "select1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['final_policy.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sink1"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/vm_metrics')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Metrics_Ods')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "dataflow1",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflow1",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "vmmetrics": {},
                                    "azuremetrics": {},
                                    "PolicySource": {},
                                    "GeographySource": {},
                                    "DateSource": {},
                                    "cases": {},
                                    "deaths": {},
                                    "recoveries": {},
                                    "sink1": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/dataflow1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Ods_Metrics')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "dataflow1",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflow1",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "vmmetrics": {},
                                    "azuremetrics": {},
                                    "PolicySource": {},
                                    "GeographySource": {},
                                    "DateSource": {},
                                    "cases": {},
                                    "deaths": {},
                                    "recoveries": {},
                                    "sink1": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-03T20:52:45Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/dataflow1')]"
            ]
        }
    ]
}